---
import type { ProjectModel, PaginatedResponse } from "../types/ProjectModel";
import ProjectCard from "./ProjectCard.astro";
const { project } = Astro.props;  // Recibimos el idioma desde Layout
console.log("Idioma en project:", project); // Agrega esto para depurar

const currentPage = 1; 
const pageSize = 4; 

 // Aquí hacemos la llamada a la API en el servidor durante la construcción de la página
 const response: PaginatedResponse<ProjectModel> = await fetch(`http://localhost:8080/api/v1/projects?page=${currentPage}&pageSize=${pageSize}`)
  .then(response => response.json());

// Extraer los datos y la paginación
const { data, total, page, pageSize: size } = response;

// Calcular el total de páginas
const totalPages = Math.ceil(total / size);
 


---

<section id="project" class="py-10 text-center bg-gray-200">
  <h1 class="text-5xl font-bold mb-4">{project.title}</h1>

  <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
    
      {data.map((projectContent: ProjectModel) => (
      <ProjectCard projectContent={projectContent} />
      ))}
    
  </div>
</section>



